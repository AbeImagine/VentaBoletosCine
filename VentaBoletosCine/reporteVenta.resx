<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>